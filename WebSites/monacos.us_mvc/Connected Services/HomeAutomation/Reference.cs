//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace monacos.us_mvc.HomeAutomation {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultInformation", Namespace="http://schemas.datacontract.org/2004/07/HomeAutomationService")]
    [System.SerializableAttribute()]
    public partial class ResultInformation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string DescriptionField;
        
        private monacos.us_mvc.HomeAutomation.ResultCodeValues ResultCodeField;
        
        private string SourceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public monacos.us_mvc.HomeAutomation.ResultCodeValues ResultCode {
            get {
                return this.ResultCodeField;
            }
            set {
                if ((this.ResultCodeField.Equals(value) != true)) {
                    this.ResultCodeField = value;
                    this.RaisePropertyChanged("ResultCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultCodeValues", Namespace="http://schemas.datacontract.org/2004/07/HomeAutomationService")]
    public enum ResultCodeValues : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fail = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warning = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Undefined = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceInformation", Namespace="http://schemas.datacontract.org/2004/07/HomeAutomationService")]
    [System.SerializableAttribute()]
    public partial class DeviceInformation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DimmableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastUpdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReadOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Dimmable {
            get {
                return this.DimmableField;
            }
            set {
                if ((this.DimmableField.Equals(value) != true)) {
                    this.DimmableField = value;
                    this.RaisePropertyChanged("Dimmable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastUpdate {
            get {
                return this.LastUpdateField;
            }
            set {
                if ((object.ReferenceEquals(this.LastUpdateField, value) != true)) {
                    this.LastUpdateField = value;
                    this.RaisePropertyChanged("LastUpdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReadOnly {
            get {
                return this.ReadOnlyField;
            }
            set {
                if ((this.ReadOnlyField.Equals(value) != true)) {
                    this.ReadOnlyField = value;
                    this.RaisePropertyChanged("ReadOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HomeAutomation.IHomeAutomationService")]
    public interface IHomeAutomationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHomeAutomationService/SetServiceSpeechNotification", ReplyAction="http://tempuri.org/IHomeAutomationService/SetServiceSpeechNotificationResponse")]
        monacos.us_mvc.HomeAutomation.SetServiceSpeechNotificationResponse SetServiceSpeechNotification(monacos.us_mvc.HomeAutomation.SetServiceSpeechNotificationRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHomeAutomationService/SetServiceSpeechNotification", ReplyAction="http://tempuri.org/IHomeAutomationService/SetServiceSpeechNotificationResponse")]
        System.Threading.Tasks.Task<monacos.us_mvc.HomeAutomation.SetServiceSpeechNotificationResponse> SetServiceSpeechNotificationAsync(monacos.us_mvc.HomeAutomation.SetServiceSpeechNotificationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHomeAutomationService/UpdateControlDeviceState", ReplyAction="http://tempuri.org/IHomeAutomationService/UpdateControlDeviceStateResponse")]
        monacos.us_mvc.HomeAutomation.UpdateControlDeviceStateResponse UpdateControlDeviceState(monacos.us_mvc.HomeAutomation.UpdateControlDeviceStateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHomeAutomationService/UpdateControlDeviceState", ReplyAction="http://tempuri.org/IHomeAutomationService/UpdateControlDeviceStateResponse")]
        System.Threading.Tasks.Task<monacos.us_mvc.HomeAutomation.UpdateControlDeviceStateResponse> UpdateControlDeviceStateAsync(monacos.us_mvc.HomeAutomation.UpdateControlDeviceStateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHomeAutomationService/GetControlDeviceStates", ReplyAction="http://tempuri.org/IHomeAutomationService/GetControlDeviceStatesResponse")]
        monacos.us_mvc.HomeAutomation.GetControlDeviceStatesResponse GetControlDeviceStates(monacos.us_mvc.HomeAutomation.GetControlDeviceStatesRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHomeAutomationService/GetControlDeviceStates", ReplyAction="http://tempuri.org/IHomeAutomationService/GetControlDeviceStatesResponse")]
        System.Threading.Tasks.Task<monacos.us_mvc.HomeAutomation.GetControlDeviceStatesResponse> GetControlDeviceStatesAsync(monacos.us_mvc.HomeAutomation.GetControlDeviceStatesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHomeAutomationService/InitializeService", ReplyAction="http://tempuri.org/IHomeAutomationService/InitializeServiceResponse")]
        monacos.us_mvc.HomeAutomation.InitializeServiceResponse InitializeService(monacos.us_mvc.HomeAutomation.InitializeServiceRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHomeAutomationService/InitializeService", ReplyAction="http://tempuri.org/IHomeAutomationService/InitializeServiceResponse")]
        System.Threading.Tasks.Task<monacos.us_mvc.HomeAutomation.InitializeServiceResponse> InitializeServiceAsync(monacos.us_mvc.HomeAutomation.InitializeServiceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHomeAutomationService/Ping", ReplyAction="http://tempuri.org/IHomeAutomationService/PingResponse")]
        string Ping();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHomeAutomationService/Ping", ReplyAction="http://tempuri.org/IHomeAutomationService/PingResponse")]
        System.Threading.Tasks.Task<string> PingAsync();
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetServiceSpeechNotification", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SetServiceSpeechNotificationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool bolState;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public monacos.us_mvc.HomeAutomation.ResultInformation ResultData;
        
        public SetServiceSpeechNotificationRequest() {
        }
        
        public SetServiceSpeechNotificationRequest(bool bolState, monacos.us_mvc.HomeAutomation.ResultInformation ResultData) {
            this.bolState = bolState;
            this.ResultData = ResultData;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetServiceSpeechNotificationResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SetServiceSpeechNotificationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public monacos.us_mvc.HomeAutomation.ResultInformation ResultData;
        
        public SetServiceSpeechNotificationResponse() {
        }
        
        public SetServiceSpeechNotificationResponse(monacos.us_mvc.HomeAutomation.ResultInformation ResultData) {
            this.ResultData = ResultData;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateControlDeviceState", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateControlDeviceStateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int intControlDeviceID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string strControlDeviceCommand;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public double dblControlDeviceValue;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public monacos.us_mvc.HomeAutomation.DeviceInformation[] obDeviceInformationList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public monacos.us_mvc.HomeAutomation.ResultInformation ResultData;
        
        public UpdateControlDeviceStateRequest() {
        }
        
        public UpdateControlDeviceStateRequest(int intControlDeviceID, string strControlDeviceCommand, double dblControlDeviceValue, monacos.us_mvc.HomeAutomation.DeviceInformation[] obDeviceInformationList, monacos.us_mvc.HomeAutomation.ResultInformation ResultData) {
            this.intControlDeviceID = intControlDeviceID;
            this.strControlDeviceCommand = strControlDeviceCommand;
            this.dblControlDeviceValue = dblControlDeviceValue;
            this.obDeviceInformationList = obDeviceInformationList;
            this.ResultData = ResultData;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateControlDeviceStateResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateControlDeviceStateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public monacos.us_mvc.HomeAutomation.DeviceInformation[] obDeviceInformationList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public monacos.us_mvc.HomeAutomation.ResultInformation ResultData;
        
        public UpdateControlDeviceStateResponse() {
        }
        
        public UpdateControlDeviceStateResponse(monacos.us_mvc.HomeAutomation.DeviceInformation[] obDeviceInformationList, monacos.us_mvc.HomeAutomation.ResultInformation ResultData) {
            this.obDeviceInformationList = obDeviceInformationList;
            this.ResultData = ResultData;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetControlDeviceStates", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetControlDeviceStatesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public monacos.us_mvc.HomeAutomation.DeviceInformation[] obDeviceInformationList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public monacos.us_mvc.HomeAutomation.ResultInformation ResultData;
        
        public GetControlDeviceStatesRequest() {
        }
        
        public GetControlDeviceStatesRequest(monacos.us_mvc.HomeAutomation.DeviceInformation[] obDeviceInformationList, monacos.us_mvc.HomeAutomation.ResultInformation ResultData) {
            this.obDeviceInformationList = obDeviceInformationList;
            this.ResultData = ResultData;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetControlDeviceStatesResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetControlDeviceStatesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public monacos.us_mvc.HomeAutomation.DeviceInformation[] obDeviceInformationList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public monacos.us_mvc.HomeAutomation.ResultInformation ResultData;
        
        public GetControlDeviceStatesResponse() {
        }
        
        public GetControlDeviceStatesResponse(monacos.us_mvc.HomeAutomation.DeviceInformation[] obDeviceInformationList, monacos.us_mvc.HomeAutomation.ResultInformation ResultData) {
            this.obDeviceInformationList = obDeviceInformationList;
            this.ResultData = ResultData;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InitializeService", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class InitializeServiceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public monacos.us_mvc.HomeAutomation.DeviceInformation[] obDeviceInformationList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public monacos.us_mvc.HomeAutomation.ResultInformation ResultData;
        
        public InitializeServiceRequest() {
        }
        
        public InitializeServiceRequest(monacos.us_mvc.HomeAutomation.DeviceInformation[] obDeviceInformationList, monacos.us_mvc.HomeAutomation.ResultInformation ResultData) {
            this.obDeviceInformationList = obDeviceInformationList;
            this.ResultData = ResultData;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InitializeServiceResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class InitializeServiceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public monacos.us_mvc.HomeAutomation.DeviceInformation[] obDeviceInformationList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public monacos.us_mvc.HomeAutomation.ResultInformation ResultData;
        
        public InitializeServiceResponse() {
        }
        
        public InitializeServiceResponse(monacos.us_mvc.HomeAutomation.DeviceInformation[] obDeviceInformationList, monacos.us_mvc.HomeAutomation.ResultInformation ResultData) {
            this.obDeviceInformationList = obDeviceInformationList;
            this.ResultData = ResultData;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IHomeAutomationServiceChannel : monacos.us_mvc.HomeAutomation.IHomeAutomationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HomeAutomationServiceClient : System.ServiceModel.ClientBase<monacos.us_mvc.HomeAutomation.IHomeAutomationService>, monacos.us_mvc.HomeAutomation.IHomeAutomationService {
        
        public HomeAutomationServiceClient() {
        }
        
        public HomeAutomationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public HomeAutomationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HomeAutomationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HomeAutomationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        monacos.us_mvc.HomeAutomation.SetServiceSpeechNotificationResponse monacos.us_mvc.HomeAutomation.IHomeAutomationService.SetServiceSpeechNotification(monacos.us_mvc.HomeAutomation.SetServiceSpeechNotificationRequest request) {
            return base.Channel.SetServiceSpeechNotification(request);
        }
        
        public void SetServiceSpeechNotification(bool bolState, ref monacos.us_mvc.HomeAutomation.ResultInformation ResultData) {
            monacos.us_mvc.HomeAutomation.SetServiceSpeechNotificationRequest inValue = new monacos.us_mvc.HomeAutomation.SetServiceSpeechNotificationRequest();
            inValue.bolState = bolState;
            inValue.ResultData = ResultData;
            monacos.us_mvc.HomeAutomation.SetServiceSpeechNotificationResponse retVal = ((monacos.us_mvc.HomeAutomation.IHomeAutomationService)(this)).SetServiceSpeechNotification(inValue);
            ResultData = retVal.ResultData;
        }
        
        public System.Threading.Tasks.Task<monacos.us_mvc.HomeAutomation.SetServiceSpeechNotificationResponse> SetServiceSpeechNotificationAsync(monacos.us_mvc.HomeAutomation.SetServiceSpeechNotificationRequest request) {
            return base.Channel.SetServiceSpeechNotificationAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        monacos.us_mvc.HomeAutomation.UpdateControlDeviceStateResponse monacos.us_mvc.HomeAutomation.IHomeAutomationService.UpdateControlDeviceState(monacos.us_mvc.HomeAutomation.UpdateControlDeviceStateRequest request) {
            return base.Channel.UpdateControlDeviceState(request);
        }
        
        public void UpdateControlDeviceState(int intControlDeviceID, string strControlDeviceCommand, double dblControlDeviceValue, ref monacos.us_mvc.HomeAutomation.DeviceInformation[] obDeviceInformationList, ref monacos.us_mvc.HomeAutomation.ResultInformation ResultData) {
            monacos.us_mvc.HomeAutomation.UpdateControlDeviceStateRequest inValue = new monacos.us_mvc.HomeAutomation.UpdateControlDeviceStateRequest();
            inValue.intControlDeviceID = intControlDeviceID;
            inValue.strControlDeviceCommand = strControlDeviceCommand;
            inValue.dblControlDeviceValue = dblControlDeviceValue;
            inValue.obDeviceInformationList = obDeviceInformationList;
            inValue.ResultData = ResultData;
            monacos.us_mvc.HomeAutomation.UpdateControlDeviceStateResponse retVal = ((monacos.us_mvc.HomeAutomation.IHomeAutomationService)(this)).UpdateControlDeviceState(inValue);
            obDeviceInformationList = retVal.obDeviceInformationList;
            ResultData = retVal.ResultData;
        }
        
        public System.Threading.Tasks.Task<monacos.us_mvc.HomeAutomation.UpdateControlDeviceStateResponse> UpdateControlDeviceStateAsync(monacos.us_mvc.HomeAutomation.UpdateControlDeviceStateRequest request) {
            return base.Channel.UpdateControlDeviceStateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        monacos.us_mvc.HomeAutomation.GetControlDeviceStatesResponse monacos.us_mvc.HomeAutomation.IHomeAutomationService.GetControlDeviceStates(monacos.us_mvc.HomeAutomation.GetControlDeviceStatesRequest request) {
            return base.Channel.GetControlDeviceStates(request);
        }
        
        public void GetControlDeviceStates(ref monacos.us_mvc.HomeAutomation.DeviceInformation[] obDeviceInformationList, ref monacos.us_mvc.HomeAutomation.ResultInformation ResultData) {
            monacos.us_mvc.HomeAutomation.GetControlDeviceStatesRequest inValue = new monacos.us_mvc.HomeAutomation.GetControlDeviceStatesRequest();
            inValue.obDeviceInformationList = obDeviceInformationList;
            inValue.ResultData = ResultData;
            monacos.us_mvc.HomeAutomation.GetControlDeviceStatesResponse retVal = ((monacos.us_mvc.HomeAutomation.IHomeAutomationService)(this)).GetControlDeviceStates(inValue);
            obDeviceInformationList = retVal.obDeviceInformationList;
            ResultData = retVal.ResultData;
        }
        
        public System.Threading.Tasks.Task<monacos.us_mvc.HomeAutomation.GetControlDeviceStatesResponse> GetControlDeviceStatesAsync(monacos.us_mvc.HomeAutomation.GetControlDeviceStatesRequest request) {
            return base.Channel.GetControlDeviceStatesAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        monacos.us_mvc.HomeAutomation.InitializeServiceResponse monacos.us_mvc.HomeAutomation.IHomeAutomationService.InitializeService(monacos.us_mvc.HomeAutomation.InitializeServiceRequest request) {
            return base.Channel.InitializeService(request);
        }
        
        public void InitializeService(ref monacos.us_mvc.HomeAutomation.DeviceInformation[] obDeviceInformationList, ref monacos.us_mvc.HomeAutomation.ResultInformation ResultData) {
            monacos.us_mvc.HomeAutomation.InitializeServiceRequest inValue = new monacos.us_mvc.HomeAutomation.InitializeServiceRequest();
            inValue.obDeviceInformationList = obDeviceInformationList;
            inValue.ResultData = ResultData;
            monacos.us_mvc.HomeAutomation.InitializeServiceResponse retVal = ((monacos.us_mvc.HomeAutomation.IHomeAutomationService)(this)).InitializeService(inValue);
            obDeviceInformationList = retVal.obDeviceInformationList;
            ResultData = retVal.ResultData;
        }
        
        public System.Threading.Tasks.Task<monacos.us_mvc.HomeAutomation.InitializeServiceResponse> InitializeServiceAsync(monacos.us_mvc.HomeAutomation.InitializeServiceRequest request) {
            return base.Channel.InitializeServiceAsync(request);
        }
        
        public string Ping() {
            return base.Channel.Ping();
        }
        
        public System.Threading.Tasks.Task<string> PingAsync() {
            return base.Channel.PingAsync();
        }
    }
}
